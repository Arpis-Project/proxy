//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ProxyVyV.DteFacele {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DoceleOLSOAP", Namespace="http://www.facele.cl/DoceleOL/")]
    public partial class DoceleOL : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback generaDTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtieneDTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback sinConfirmarOperationCompleted;
        
        private System.Threading.SendOrPostCallback controversiaOperationCompleted;
        
        private System.Threading.SendOrPostCallback obtieneBorradorOperationCompleted;
        
        private System.Threading.SendOrPostCallback reimprimeDTEOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarObservacionesDTEOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DoceleOL() {
            this.Url = global::ProxyVyV.Properties.Settings.Default.ProxyVyV_DteFacele_DoceleOL;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event generaDTECompletedEventHandler generaDTECompleted;
        
        /// <remarks/>
        public event obtieneDTECompletedEventHandler obtieneDTECompleted;
        
        /// <remarks/>
        public event sinConfirmarCompletedEventHandler sinConfirmarCompleted;
        
        /// <remarks/>
        public event controversiaCompletedEventHandler controversiaCompleted;
        
        /// <remarks/>
        public event obtieneBorradorCompletedEventHandler obtieneBorradorCompleted;
        
        /// <remarks/>
        public event reimprimeDTECompletedEventHandler reimprimeDTECompleted;
        
        /// <remarks/>
        public event actualizarObservacionesDTECompletedEventHandler actualizarObservacionesDTECompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/generaDTE", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int generaDTE([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] ref int tipoDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] generaDTEFormato formato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string txt, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string xml, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string uuid, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out long folioDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool folioDTESpecified) {
            object[] results = this.Invoke("generaDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        formato,
                        txt,
                        xml,
                        uuid});
            rutEmisor = ((string)(results[1]));
            tipoDTE = ((int)(results[2]));
            descripcionOperacion = ((string)(results[3]));
            folioDTE = ((long)(results[4]));
            folioDTESpecified = ((bool)(results[5]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void generaDTEAsync(string rutEmisor, int tipoDTE, generaDTEFormato formato, string txt, string xml, string uuid) {
            this.generaDTEAsync(rutEmisor, tipoDTE, formato, txt, xml, uuid, null);
        }
        
        /// <remarks/>
        public void generaDTEAsync(string rutEmisor, int tipoDTE, generaDTEFormato formato, string txt, string xml, string uuid, object userState) {
            if ((this.generaDTEOperationCompleted == null)) {
                this.generaDTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OngeneraDTEOperationCompleted);
            }
            this.InvokeAsync("generaDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        formato,
                        txt,
                        xml,
                        uuid}, this.generaDTEOperationCompleted, userState);
        }
        
        private void OngeneraDTEOperationCompleted(object arg) {
            if ((this.generaDTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generaDTECompleted(this, new generaDTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/obtieneDTE", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int obtieneDTE([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tipoDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long folioDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] obtieneDTEFormato formato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] bool cedible, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cedibleSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cantidad, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cantidadSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string XML, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] out byte[] PDF, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string URL) {
            object[] results = this.Invoke("obtieneDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE,
                        formato,
                        cedible,
                        cedibleSpecified,
                        cantidad,
                        cantidadSpecified});
            descripcionOperacion = ((string)(results[1]));
            XML = ((string)(results[2]));
            PDF = ((byte[])(results[3]));
            URL = ((string)(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void obtieneDTEAsync(string rutEmisor, int tipoDTE, long folioDTE, obtieneDTEFormato formato, bool cedible, bool cedibleSpecified, int cantidad, bool cantidadSpecified) {
            this.obtieneDTEAsync(rutEmisor, tipoDTE, folioDTE, formato, cedible, cedibleSpecified, cantidad, cantidadSpecified, null);
        }
        
        /// <remarks/>
        public void obtieneDTEAsync(string rutEmisor, int tipoDTE, long folioDTE, obtieneDTEFormato formato, bool cedible, bool cedibleSpecified, int cantidad, bool cantidadSpecified, object userState) {
            if ((this.obtieneDTEOperationCompleted == null)) {
                this.obtieneDTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtieneDTEOperationCompleted);
            }
            this.InvokeAsync("obtieneDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE,
                        formato,
                        cedible,
                        cedibleSpecified,
                        cantidad,
                        cantidadSpecified}, this.obtieneDTEOperationCompleted, userState);
        }
        
        private void OnobtieneDTEOperationCompleted(object arg) {
            if ((this.obtieneDTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtieneDTECompleted(this, new obtieneDTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/sinConfirmar", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int sinConfirmar([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out int cantidadDocumentos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool cantidadDocumentosSpecified, [System.Xml.Serialization.XmlElementAttribute("Documento", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out Documento[] Documento) {
            object[] results = this.Invoke("sinConfirmar", new object[] {
                        rutEmisor});
            descripcionOperacion = ((string)(results[1]));
            cantidadDocumentos = ((int)(results[2]));
            cantidadDocumentosSpecified = ((bool)(results[3]));
            Documento = ((Documento[])(results[4]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void sinConfirmarAsync(string rutEmisor) {
            this.sinConfirmarAsync(rutEmisor, null);
        }
        
        /// <remarks/>
        public void sinConfirmarAsync(string rutEmisor, object userState) {
            if ((this.sinConfirmarOperationCompleted == null)) {
                this.sinConfirmarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsinConfirmarOperationCompleted);
            }
            this.InvokeAsync("sinConfirmar", new object[] {
                        rutEmisor}, this.sinConfirmarOperationCompleted, userState);
        }
        
        private void OnsinConfirmarOperationCompleted(object arg) {
            if ((this.sinConfirmarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sinConfirmarCompleted(this, new sinConfirmarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/controversia", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int controversia([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tipoDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long folioDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] controversiaOperacion operacion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion) {
            object[] results = this.Invoke("controversia", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE,
                        operacion});
            descripcionOperacion = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void controversiaAsync(string rutEmisor, int tipoDTE, long folioDTE, controversiaOperacion operacion) {
            this.controversiaAsync(rutEmisor, tipoDTE, folioDTE, operacion, null);
        }
        
        /// <remarks/>
        public void controversiaAsync(string rutEmisor, int tipoDTE, long folioDTE, controversiaOperacion operacion, object userState) {
            if ((this.controversiaOperationCompleted == null)) {
                this.controversiaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontroversiaOperationCompleted);
            }
            this.InvokeAsync("controversia", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE,
                        operacion}, this.controversiaOperationCompleted, userState);
        }
        
        private void OncontroversiaOperationCompleted(object arg) {
            if ((this.controversiaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.controversiaCompleted(this, new controversiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/obtieneBorrador", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int obtieneBorrador([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tipoDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] FormatoType formato, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string txt, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string xml, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")] out byte[] PDF) {
            object[] results = this.Invoke("obtieneBorrador", new object[] {
                        rutEmisor,
                        tipoDTE,
                        formato,
                        txt,
                        xml});
            descripcionOperacion = ((string)(results[1]));
            PDF = ((byte[])(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void obtieneBorradorAsync(string rutEmisor, int tipoDTE, FormatoType formato, string txt, string xml) {
            this.obtieneBorradorAsync(rutEmisor, tipoDTE, formato, txt, xml, null);
        }
        
        /// <remarks/>
        public void obtieneBorradorAsync(string rutEmisor, int tipoDTE, FormatoType formato, string txt, string xml, object userState) {
            if ((this.obtieneBorradorOperationCompleted == null)) {
                this.obtieneBorradorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnobtieneBorradorOperationCompleted);
            }
            this.InvokeAsync("obtieneBorrador", new object[] {
                        rutEmisor,
                        tipoDTE,
                        formato,
                        txt,
                        xml}, this.obtieneBorradorOperationCompleted, userState);
        }
        
        private void OnobtieneBorradorOperationCompleted(object arg) {
            if ((this.obtieneBorradorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.obtieneBorradorCompleted(this, new obtieneBorradorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/reimprimeDTE", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int reimprimeDTE([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tipoDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long folioDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion) {
            object[] results = this.Invoke("reimprimeDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE});
            descripcionOperacion = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void reimprimeDTEAsync(string rutEmisor, int tipoDTE, long folioDTE) {
            this.reimprimeDTEAsync(rutEmisor, tipoDTE, folioDTE, null);
        }
        
        /// <remarks/>
        public void reimprimeDTEAsync(string rutEmisor, int tipoDTE, long folioDTE, object userState) {
            if ((this.reimprimeDTEOperationCompleted == null)) {
                this.reimprimeDTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreimprimeDTEOperationCompleted);
            }
            this.InvokeAsync("reimprimeDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE}, this.reimprimeDTEOperationCompleted, userState);
        }
        
        private void OnreimprimeDTEOperationCompleted(object arg) {
            if ((this.reimprimeDTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reimprimeDTECompleted(this, new reimprimeDTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.facele.cl/DoceleOL/actualizarObservacionesDTE", RequestNamespace="http://www.facele.cl/DoceleOL/", ResponseNamespace="http://www.facele.cl/DoceleOL/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("estadoOperacion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int actualizarObservacionesDTE([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string rutEmisor, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tipoDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] long folioDTE, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string observacionesTXT, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string descripcionOperacion) {
            object[] results = this.Invoke("actualizarObservacionesDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE,
                        observacionesTXT});
            descripcionOperacion = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarObservacionesDTEAsync(string rutEmisor, int tipoDTE, long folioDTE, string observacionesTXT) {
            this.actualizarObservacionesDTEAsync(rutEmisor, tipoDTE, folioDTE, observacionesTXT, null);
        }
        
        /// <remarks/>
        public void actualizarObservacionesDTEAsync(string rutEmisor, int tipoDTE, long folioDTE, string observacionesTXT, object userState) {
            if ((this.actualizarObservacionesDTEOperationCompleted == null)) {
                this.actualizarObservacionesDTEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarObservacionesDTEOperationCompleted);
            }
            this.InvokeAsync("actualizarObservacionesDTE", new object[] {
                        rutEmisor,
                        tipoDTE,
                        folioDTE,
                        observacionesTXT}, this.actualizarObservacionesDTEOperationCompleted, userState);
        }
        
        private void OnactualizarObservacionesDTEOperationCompleted(object arg) {
            if ((this.actualizarObservacionesDTECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarObservacionesDTECompleted(this, new actualizarObservacionesDTECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.facele.cl/DoceleOL/")]
    public enum generaDTEFormato {
        
        /// <remarks/>
        XML,
        
        /// <remarks/>
        TXT,
        
        /// <remarks/>
        TXT123,
        
        /// <remarks/>
        XML_OBS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.facele.cl/DoceleOL/")]
    public enum obtieneDTEFormato {
        
        /// <remarks/>
        PDF,
        
        /// <remarks/>
        XML,
        
        /// <remarks/>
        PDF_TERMICO,
        
        /// <remarks/>
        URL_PDF,
        
        /// <remarks/>
        PDF_2N,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.facele.cl/DoceleOL/")]
    public partial class Documento {
        
        private string rutEmisorField;
        
        private int tipoDTEField;
        
        private long folioDTEField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string rutEmisor {
            get {
                return this.rutEmisorField;
            }
            set {
                this.rutEmisorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int tipoDTE {
            get {
                return this.tipoDTEField;
            }
            set {
                this.tipoDTEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public long folioDTE {
            get {
                return this.folioDTEField;
            }
            set {
                this.folioDTEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.facele.cl/DoceleOL/")]
    public enum controversiaOperacion {
        
        /// <remarks/>
        libera,
        
        /// <remarks/>
        anula,
        
        /// <remarks/>
        confirma,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.facele.cl/DoceleOL/")]
    public enum FormatoType {
        
        /// <remarks/>
        TXT,
        
        /// <remarks/>
        TXT123,
        
        /// <remarks/>
        XML,
        
        /// <remarks/>
        XML_OBS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void generaDTECompletedEventHandler(object sender, generaDTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class generaDTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal generaDTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string rutEmisor {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int tipoDTE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public long folioDTE {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public bool folioDTESpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void obtieneDTECompletedEventHandler(object sender, obtieneDTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtieneDTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtieneDTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string XML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public byte[] PDF {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sinConfirmarCompletedEventHandler(object sender, sinConfirmarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sinConfirmarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sinConfirmarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int cantidadDocumentos {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public bool cantidadDocumentosSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public Documento[] Documento {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Documento[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void controversiaCompletedEventHandler(object sender, controversiaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class controversiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal controversiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void obtieneBorradorCompletedEventHandler(object sender, obtieneBorradorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class obtieneBorradorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal obtieneBorradorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public byte[] PDF {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void reimprimeDTECompletedEventHandler(object sender, reimprimeDTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reimprimeDTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reimprimeDTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void actualizarObservacionesDTECompletedEventHandler(object sender, actualizarObservacionesDTECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class actualizarObservacionesDTECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal actualizarObservacionesDTECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string descripcionOperacion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591